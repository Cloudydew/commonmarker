var search_data = {"index":{"searchIndex":["commonmarker","config","parse","render","htmlrenderer","node","inspect","nodeerror","renderer","_render_commonmark()","_render_html()","_render_plaintext()","append_child()","block()","blockquote()","blocksep()","check_option()","code()","code_block()","code_block()","container()","containersep()","cr()","delete()","document()","document()","each()","each_child()","emph()","escape_href()","escape_html()","extensions()","fence_info()","fence_info=()","first_child()","footnote_definition()","footnote_reference()","header()","header_level()","header_level=()","hrule()","html()","html_escape_href()","html_escape_html()","image()","inline_html()","insert_after()","insert_before()","inspect()","last_child()","linebreak()","link()","list()","list_item()","list_start()","list_start=()","list_tight()","list_tight=()","list_type()","list_type=()","markdown_to_html()","new()","new()","next()","option_enabled?()","out()","out_footnote_backref()","paragraph()","parent()","parse_document()","plain()","prepend_child()","pretty_print()","previous()","process_options()","reference_def()","render()","render()","render_doc()","render_html()","softbreak()","sourcepos()","sourcepos()","strikethrough()","string_content()","string_content=()","strong()","table()","table_alignments()","table_cell()","table_header()","table_row()","tagfilter()","text()","title()","title=()","to_commonmark()","to_html()","to_plaintext()","type()","type_string()","url()","url=()","walk()","readme"],"longSearchIndex":["commonmarker","commonmarker::config","commonmarker::config::parse","commonmarker::config::render","commonmarker::htmlrenderer","commonmarker::node","commonmarker::node::inspect","commonmarker::nodeerror","commonmarker::renderer","commonmarker::node#_render_commonmark()","commonmarker::node#_render_html()","commonmarker::node#_render_plaintext()","commonmarker::node#append_child()","commonmarker::renderer#block()","commonmarker::htmlrenderer#blockquote()","commonmarker::renderer#blocksep()","commonmarker::config::check_option()","commonmarker::htmlrenderer#code()","commonmarker::htmlrenderer#code_block()","commonmarker::renderer#code_block()","commonmarker::renderer#container()","commonmarker::renderer#containersep()","commonmarker::renderer#cr()","commonmarker::node#delete()","commonmarker::htmlrenderer#document()","commonmarker::renderer#document()","commonmarker::node#each()","commonmarker::node#each_child()","commonmarker::htmlrenderer#emph()","commonmarker::renderer#escape_href()","commonmarker::renderer#escape_html()","commonmarker::extensions()","commonmarker::node#fence_info()","commonmarker::node#fence_info=()","commonmarker::node#first_child()","commonmarker::htmlrenderer#footnote_definition()","commonmarker::htmlrenderer#footnote_reference()","commonmarker::htmlrenderer#header()","commonmarker::node#header_level()","commonmarker::node#header_level=()","commonmarker::htmlrenderer#hrule()","commonmarker::htmlrenderer#html()","commonmarker::node#html_escape_href()","commonmarker::node#html_escape_html()","commonmarker::htmlrenderer#image()","commonmarker::htmlrenderer#inline_html()","commonmarker::node#insert_after()","commonmarker::node#insert_before()","commonmarker::node::inspect#inspect()","commonmarker::node#last_child()","commonmarker::htmlrenderer#linebreak()","commonmarker::htmlrenderer#link()","commonmarker::htmlrenderer#list()","commonmarker::htmlrenderer#list_item()","commonmarker::node#list_start()","commonmarker::node#list_start=()","commonmarker::node#list_tight()","commonmarker::node#list_tight=()","commonmarker::node#list_type()","commonmarker::node#list_type=()","commonmarker::node::markdown_to_html()","commonmarker::node::new()","commonmarker::renderer::new()","commonmarker::node#next()","commonmarker::renderer#option_enabled?()","commonmarker::renderer#out()","commonmarker::htmlrenderer#out_footnote_backref()","commonmarker::htmlrenderer#paragraph()","commonmarker::node#parent()","commonmarker::node::parse_document()","commonmarker::renderer#plain()","commonmarker::node#prepend_child()","commonmarker::node::inspect#pretty_print()","commonmarker::node#previous()","commonmarker::config::process_options()","commonmarker::renderer#reference_def()","commonmarker::htmlrenderer#render()","commonmarker::renderer#render()","commonmarker::render_doc()","commonmarker::render_html()","commonmarker::htmlrenderer#softbreak()","commonmarker::node#sourcepos()","commonmarker::renderer#sourcepos()","commonmarker::htmlrenderer#strikethrough()","commonmarker::node#string_content()","commonmarker::node#string_content=()","commonmarker::htmlrenderer#strong()","commonmarker::htmlrenderer#table()","commonmarker::node#table_alignments()","commonmarker::htmlrenderer#table_cell()","commonmarker::htmlrenderer#table_header()","commonmarker::htmlrenderer#table_row()","commonmarker::renderer#tagfilter()","commonmarker::htmlrenderer#text()","commonmarker::node#title()","commonmarker::node#title=()","commonmarker::node#to_commonmark()","commonmarker::node#to_html()","commonmarker::node#to_plaintext()","commonmarker::node#type()","commonmarker::node#type_string()","commonmarker::node#url()","commonmarker::node#url=()","commonmarker::node#walk()",""],"info":[["CommonMarker","","CommonMarker.html","",""],["CommonMarker::Config","","CommonMarker/Config.html","","<p>For Ruby::Enum, these must be classes, not modules\n"],["CommonMarker::Config::Parse","","CommonMarker/Config/Parse.html","",""],["CommonMarker::Config::Render","","CommonMarker/Config/Render.html","",""],["CommonMarker::HtmlRenderer","","CommonMarker/HtmlRenderer.html","",""],["CommonMarker::Node","","CommonMarker/Node.html","",""],["CommonMarker::Node::Inspect","","CommonMarker/Node/Inspect.html","",""],["CommonMarker::NodeError","","CommonMarker/NodeError.html","",""],["CommonMarker::Renderer","","CommonMarker/Renderer.html","",""],["_render_commonmark","CommonMarker::Node","CommonMarker/Node.html#method-i-_render_commonmark","(p1, p2 = v2)","<p>Internal: Convert the node to a CommonMark string.\n<p>Returns a {String}.\n"],["_render_html","CommonMarker::Node","CommonMarker/Node.html#method-i-_render_html","(p1, p2)","<p>Internal: Convert the node to an HTML string.\n<p>Returns a {String}.\n"],["_render_plaintext","CommonMarker::Node","CommonMarker/Node.html#method-i-_render_plaintext","(p1, p2 = v2)","<p>Internal: Convert the node to a plain textstring.\n<p>Returns a {String}.\n"],["append_child","CommonMarker::Node","CommonMarker/Node.html#method-i-append_child","(p1)","<p>Public: Inserts a node as the last child of the current node.\n<p>child - A child {Node} to insert.\n<p>Returns …\n"],["block","CommonMarker::Renderer","CommonMarker/Renderer.html#method-i-block","()",""],["blockquote","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-blockquote","(node)",""],["blocksep","CommonMarker::Renderer","CommonMarker/Renderer.html#method-i-blocksep","()",""],["check_option","CommonMarker::Config","CommonMarker/Config.html#method-c-check_option","(option, type)",""],["code","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-code","(node)",""],["code_block","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-code_block","(node)",""],["code_block","CommonMarker::Renderer","CommonMarker/Renderer.html#method-i-code_block","(node)",""],["container","CommonMarker::Renderer","CommonMarker/Renderer.html#method-i-container","(starter, ender)",""],["containersep","CommonMarker::Renderer","CommonMarker/Renderer.html#method-i-containersep","()",""],["cr","CommonMarker::Renderer","CommonMarker/Renderer.html#method-i-cr","()",""],["delete","CommonMarker::Node","CommonMarker/Node.html#method-i-delete","()","<p>Internal: Unlinks the node from the tree (fixing pointers in parents and\nsiblings appropriately).\n"],["document","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-document","(_)",""],["document","CommonMarker::Renderer","CommonMarker/Renderer.html#method-i-document","(_node)",""],["each","CommonMarker::Node","CommonMarker/Node.html#method-i-each","(&block)","<p>Public: Iterate over the children (if any) of the current pointer.\n"],["each_child","CommonMarker::Node","CommonMarker/Node.html#method-i-each_child","(&block)","<p>Deprecated: Please use `each` instead\n"],["emph","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-emph","(_)",""],["escape_href","CommonMarker::Renderer","CommonMarker/Renderer.html#method-i-escape_href","(str)",""],["escape_html","CommonMarker::Renderer","CommonMarker/Renderer.html#method-i-escape_html","(str)",""],["extensions","CommonMarker","CommonMarker.html#method-c-extensions","()",""],["fence_info","CommonMarker::Node","CommonMarker/Node.html#method-i-fence_info","()","<p>Public: Gets the fence info of the current node (must be a `:code_block`).\n<p>Returns a {String} representing …\n"],["fence_info=","CommonMarker::Node","CommonMarker/Node.html#method-i-fence_info-3D","(p1)","<p>Public: Sets the fence info of the current node (must be a `:code_block`).\n<p>info - A {String} representing …\n"],["first_child","CommonMarker::Node","CommonMarker/Node.html#method-i-first_child","()","<p>Public: Fetches the first child of the node.\n<p>Returns a {Node} if a child exists, `nil` otherise.\n"],["footnote_definition","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-footnote_definition","(_)",""],["footnote_reference","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-footnote_reference","(node)",""],["header","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-header","(node)",""],["header_level","CommonMarker::Node","CommonMarker/Node.html#method-i-header_level","()","<p>Public: Gets the header level of the current node (must be a `:header`).\n<p>Returns a {Number} representing …\n"],["header_level=","CommonMarker::Node","CommonMarker/Node.html#method-i-header_level-3D","(p1)","<p>Public: Sets the header level of the current node (must be a `:header`).\n<p>level - A {Number} representing …\n"],["hrule","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-hrule","(node)",""],["html","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-html","(node)",""],["html_escape_href","CommonMarker::Node","CommonMarker/Node.html#method-i-html_escape_href","(p1)","<p>Internal: Escapes href URLs safely.\n"],["html_escape_html","CommonMarker::Node","CommonMarker/Node.html#method-i-html_escape_html","(p1)","<p>Internal: Escapes HTML content safely.\n"],["image","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-image","(node)",""],["inline_html","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-inline_html","(node)",""],["insert_after","CommonMarker::Node","CommonMarker/Node.html#method-i-insert_after","(p1)","<p>Public: Inserts a node as a sibling after the current node.\n<p>sibling - A sibling {Node} to insert.\n<p>Returns …\n"],["insert_before","CommonMarker::Node","CommonMarker/Node.html#method-i-insert_before","(p1)","<p>Public: Inserts a node as a sibling before the current node.\n<p>sibling - A sibling {Node} to insert.\n<p>Returns …\n"],["inspect","CommonMarker::Node::Inspect","CommonMarker/Node/Inspect.html#method-i-inspect","()",""],["last_child","CommonMarker::Node","CommonMarker/Node.html#method-i-last_child","()","<p>Public: Fetches the first child of the current node.\n<p>Returns a {Node} if a child exists, `nil` otherise. …\n"],["linebreak","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-linebreak","(node)",""],["link","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-link","(node)",""],["list","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-list","(node)",""],["list_item","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-list_item","(node)",""],["list_start","CommonMarker::Node","CommonMarker/Node.html#method-i-list_start","()","<p>Public: Gets the starting number the current node (must be an\n`:ordered_list`).\n<p>Returns a {Number} representing …\n"],["list_start=","CommonMarker::Node","CommonMarker/Node.html#method-i-list_start-3D","(p1)","<p>Public: Sets the starting number of the current node (must be an\n`:ordered_list`).\n<p>level - A {Number} …\n"],["list_tight","CommonMarker::Node","CommonMarker/Node.html#method-i-list_tight","()","<p>Public: Gets the tight status the current node (must be a `:list`).\n<p>Returns a `true` if the list is tight, …\n"],["list_tight=","CommonMarker::Node","CommonMarker/Node.html#method-i-list_tight-3D","(p1)","<p>Public: Sets the tight status of the current node (must be a `:list`).\n<p>tight - A {Boolean} representing …\n"],["list_type","CommonMarker::Node","CommonMarker/Node.html#method-i-list_type","()","<p>Public: Gets the list type of the current node (must be a `:list`).\n<p>Returns a {Symbol}. Raises a NodeError …\n"],["list_type=","CommonMarker::Node","CommonMarker/Node.html#method-i-list_type-3D","(p1)","<p>Public: Sets the list type of the current node (must be a `:list`).\n<p>level - A {Symbol} representing the …\n"],["markdown_to_html","CommonMarker::Node","CommonMarker/Node.html#method-c-markdown_to_html","(p1, p2, p3)","<p>Internal: Parses a Markdown string into an HTML string.\n"],["new","CommonMarker::Node","CommonMarker/Node.html#method-c-new","(p1)","<p>Internal: Creates a node based on a node type.\n<p>type -  A {Symbol} representing the node to be created. …\n"],["new","CommonMarker::Renderer","CommonMarker/Renderer.html#method-c-new","(options: :DEFAULT, extensions: [])",""],["next","CommonMarker::Node","CommonMarker/Node.html#method-i-next","()","<p>Public: Fetches the next sibling of the node.\n<p>Returns a {Node} if a sibling exists, `nil` otherwise.\n"],["option_enabled?","CommonMarker::Renderer","CommonMarker/Renderer.html#method-i-option_enabled-3F","(opt)",""],["out","CommonMarker::Renderer","CommonMarker/Renderer.html#method-i-out","(*args)",""],["out_footnote_backref","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-out_footnote_backref","()",""],["paragraph","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-paragraph","(node)",""],["parent","CommonMarker::Node","CommonMarker/Node.html#method-i-parent","()","<p>Public: Fetches the parent of the current node.\n<p>Returns a {Node} if a parent exists, `nil` otherise.\n"],["parse_document","CommonMarker::Node","CommonMarker/Node.html#method-c-parse_document","(p1, p2, p3, p4)","<p>Internal: Parses a Markdown string into a document.\n"],["plain","CommonMarker::Renderer","CommonMarker/Renderer.html#method-i-plain","()",""],["prepend_child","CommonMarker::Node","CommonMarker/Node.html#method-i-prepend_child","(p1)","<p>Public: Inserts a node as the first child of the current node.\n<p>child - A child {Node} to insert.\n<p>Returns …\n"],["pretty_print","CommonMarker::Node::Inspect","CommonMarker/Node/Inspect.html#method-i-pretty_print","(pp)","<p>@param [PrettyPrint] pp\n"],["previous","CommonMarker::Node","CommonMarker/Node.html#method-i-previous","()","<p>Public: Fetches the previous sibling of the current node.\n<p>Returns a {Node} if a parent exists, `nil` otherise. …\n"],["process_options","CommonMarker::Config","CommonMarker/Config.html#method-c-process_options","(option, type)",""],["reference_def","CommonMarker::Renderer","CommonMarker/Renderer.html#method-i-reference_def","(_node)",""],["render","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-render","(node)",""],["render","CommonMarker::Renderer","CommonMarker/Renderer.html#method-i-render","(node)",""],["render_doc","CommonMarker","CommonMarker.html#method-c-render_doc","(text, options = :DEFAULT, extensions = [])","<p>Public: Parses a Markdown string into a `document` node.\n<p>string - {String} to be parsed option - A {Symbol} …\n"],["render_html","CommonMarker","CommonMarker.html#method-c-render_html","(text, options = :DEFAULT, extensions = [])","<p>Public:  Parses a Markdown string into an HTML string.\n<p>text - A {String} of text option - Either a {Symbol} …\n"],["softbreak","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-softbreak","(_)",""],["sourcepos","CommonMarker::Node","CommonMarker/Node.html#method-i-sourcepos","()","<p>Public: Fetches the sourcepos of the node.\n<p>Returns a {Hash} containing {Symbol} keys of the positions. …\n"],["sourcepos","CommonMarker::Renderer","CommonMarker/Renderer.html#method-i-sourcepos","(node)",""],["strikethrough","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-strikethrough","(_)",""],["string_content","CommonMarker::Node","CommonMarker/Node.html#method-i-string_content","()","<p>Public: Fetch the string contents of the node.\n<p>Returns a {String}.\n"],["string_content=","CommonMarker::Node","CommonMarker/Node.html#method-i-string_content-3D","(p1)","<p>Public: Sets the string content of the node.\n<p>string - A {String} containing new content.\n<p>Raises NodeError …\n"],["strong","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-strong","(_)",""],["table","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-table","(node)",""],["table_alignments","CommonMarker::Node","CommonMarker/Node.html#method-i-table_alignments","()",""],["table_cell","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-table_cell","(node)",""],["table_header","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-table_header","(node)",""],["table_row","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-table_row","(node)",""],["tagfilter","CommonMarker::Renderer","CommonMarker/Renderer.html#method-i-tagfilter","(str)",""],["text","CommonMarker::HtmlRenderer","CommonMarker/HtmlRenderer.html#method-i-text","(node)",""],["title","CommonMarker::Node","CommonMarker/Node.html#method-i-title","()","<p>Public: Gets the title of the current node (must be a `:link` or `:image`).\n<p>Returns a {String}. Raises …\n"],["title=","CommonMarker::Node","CommonMarker/Node.html#method-i-title-3D","(p1)","<p>Public: Sets the title of the current node (must be a `:link` or `:image`).\n<p>title - A {String} representing …\n"],["to_commonmark","CommonMarker::Node","CommonMarker/Node.html#method-i-to_commonmark","(options = :DEFAULT, width = 120)","<p>Public: Convert the node to a CommonMark string.\n<p>options - A {Symbol} or {Array of Symbol}s indicating …\n"],["to_html","CommonMarker::Node","CommonMarker/Node.html#method-i-to_html","(options = :DEFAULT, extensions = [])","<p>Public: Convert the node to an HTML string.\n<p>options - A {Symbol} or {Array of Symbol}s indicating the …\n"],["to_plaintext","CommonMarker::Node","CommonMarker/Node.html#method-i-to_plaintext","(options = :DEFAULT, width = 120)","<p>Public: Convert the node to a plain text string.\n<p>options - A {Symbol} or {Array of Symbol}s indicating …\n"],["type","CommonMarker::Node","CommonMarker/Node.html#method-i-type","()","<p>Public: Fetches the list type of the node.\n<p>Returns a {Symbol} representing the node&#39;s type.\n"],["type_string","CommonMarker::Node","CommonMarker/Node.html#method-i-type_string","()","<p>Public: Returns the type of the current pointer as a string.\n<p>Returns a {String}.\n"],["url","CommonMarker::Node","CommonMarker/Node.html#method-i-url","()","<p>Public: Gets the URL of the current node (must be a `:link` or `:image`).\n<p>Returns a {String}. Raises a …\n"],["url=","CommonMarker::Node","CommonMarker/Node.html#method-i-url-3D","(p1)","<p>Public: Sets the URL of the current node (must be a `:link` or `:image`).\n<p>url - A {String} representing …\n"],["walk","CommonMarker::Node","CommonMarker/Node.html#method-i-walk","(&block)","<p>Public: An iterator that “walks the tree,” descending into children\nrecursively.\n<p>blk - A {Proc} …\n"],["README","","README_md.html","","<p>CommonMarker\n<p><img src=\"https://travis-ci.org/gjtorikian/commonmarker.svg\"> <img\nsrc=\"https://badge.fury.io/rb/commonmarker.svg\"> …\n"]]}}